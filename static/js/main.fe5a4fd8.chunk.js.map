{"version":3,"sources":["redux/actions.js","redux/types.js","comps/Header.js","comps/Footer.js","comps/GamesList.js","comps/Main.js","comps/GamesListEntry.js","comps/newGameState.js","comps/ScoreboardViewer.js","comps/EditPlayer.js","comps/AddPlayer.js","comps/NewGame.js","comps/Scoreboard.js","comps/GameSummary.js","comps/getLeader.js","comps/ScoreboardPlayerEntry.js","App.js","redux/reducer.js","redux/store.js","index.js"],"names":["updateGames","games","type","payload","toggleDialog","dialog","connect","props","AppBar","Toolbar","Typography","style","flex","Button","color","edge","onClick","dispatch","Footer","Container","align","display","variant","Date","getFullYear","state","Box","mt","length","Grid","container","spacing","map","i","Fade","in","key","id","item","xs","md","lg","gameData","Main","handleClick","e","newGamesArr","currentTarget","filter","in_progress","date_modified","Card","raised","CardActionArea","CardContent","title","gutterBottom","description","List","Divider","ListItem","Tooltip","placement","ListItemIcon","CalendarToday","ListItemText","moment","diff","date_created","format","Update","fromNow","People","players","EmojiEvents","leaders","score","concat","name","getLeader","CardActions","arrow","uniqId","showErr","err","isOpen","viewerDialog","gameLoaded","gameLoadedInViewer","useState","newGameState","compState","setCompState","useEffect","reduce","acc","cv","saveChanges","newGameArr","handleChange","f","value","handleBlur","Dialog","fullScreen","open","TextField","fullWidth","multiline","InputProps","fontSize","disableUnderline","placeholder","onChange","onBlur","Alert","icon","LockOpen","Lock","justifyContent","editPlayerDialog","playerLoaded","playerLoadedInEdit","player","gameId","playerId","toString","match","parseInt","sort","a","b","onClose","maxWidth","DialogTitle","DialogContent","sm","label","autoFocus","DialogActions","addPlayerDialog","newPlayer","newPlayersArr","slice","WebkitAppearance","newGameDialog","setTimeout","newGame","noOfPlayers","arr","push","generatePlayers","severity","margin","width","endAdornment","InputAdornment","position","IconButton","RemoveCircle","AddCircle","Scoreboard","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","padding","Icon","TableBody","ind","index","inProgress","GameSummary","newGamesArray","hover","tabIndex","onKeyUp","ls","localStorage","getItem","JSON","parse","setItem","stringify","initialState","createStore","action","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.fe5a4fd8.chunk.js","sourcesContent":["import {\n  UPDATE_GAME,\n  TOGGLE_DIALOG,\n  LOAD_GAME,\n  GET_GAMES,\n  LOAD_PLAYER,\n} from \"./types\";\n\nexport const updateGames = (games) => ({\n  type: UPDATE_GAME,\n  payload: games,\n});\n\nexport const toggleDialog = (dialog) => ({\n  type: TOGGLE_DIALOG,\n  payload: dialog,\n});\n\nexport const loadGame = (id) => ({\n  type: LOAD_GAME,\n  payload: id,\n});\n\nexport const loadPlayer = (gameId, playerId) => ({\n  type: LOAD_PLAYER,\n  payload: {\n    gameId,\n    playerId,\n  },\n});\n\nexport const getGames = (games) => ({\n  type: GET_GAMES,\n  payload: games,\n});\n","export const CREATE_NEW_GAME = \"CREATE_NEW_GAME\";\nexport const UPDATE_GAME = \"UPDATE_GAME\";\nexport const GET_GAMES = \"GET_GAMES\";\nexport const LOAD_GAME = \"LOAD_GAME\";\nexport const LOAD_PLAYER = \"LOAD_PLAYER\";\nexport const TOGGLE_DIALOG = \"TOGGLE_DIALOG\";\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { toggleDialog } from \"../redux/actions\";\n\nimport { Button, AppBar, Toolbar, Typography } from \"@material-ui/core\";\n\nconst Header = (props) => {\n  const handleClick = () => {\n    props.dispatch(toggleDialog(\"newGameDialog\"));\n  };\n  return (\n    <>\n      <AppBar>\n        <Toolbar>\n          <Typography style={{ flex: 1 }}>Scoreboard</Typography>\n          <Button color=\"inherit\" edge=\"end\" onClick={handleClick}>\n            New\n          </Button>\n        </Toolbar>\n      </AppBar>\n      <Toolbar />\n    </>\n  );\n};\n\nexport default connect()(Header);\n","import React from \"react\";\nimport { Container, Typography } from \"@material-ui/core\";\n\nconst Footer = () => {\n  return (\n    <footer>\n      <Container>\n        <Typography\n          align=\"center\"\n          color=\"textSecondary\"\n          display=\"block\"\n          variant=\"overline\"\n        >\n          &copy; 2020{\" \"}\n          {new Date().getFullYear() === 2020\n            ? null\n            : ` - ${new Date().getFullYear()} `}\n          David Andrews\n        </Typography>\n      </Container>{\" \"}\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { NewGame, GamesListEntry } from \"../Components\";\n\nimport { Box, Grid, Typography, Fade } from \"@material-ui/core\";\n\nconst GamesList = (props) => {\n  return (\n    <Box mt={3}>\n      {props.games && props.games.length > 0 ? (\n        <Grid container spacing={2}>\n          {props.games.map((i) => {\n            return (\n              <Fade in key={i.id}>\n                <Grid item key={i.id} xs={12} md={6} lg={4}>\n                  <GamesListEntry key={i.id} gameData={i} />\n                </Grid>\n              </Fade>\n            );\n          })}\n        </Grid>\n      ) : (\n        <Typography>\n          You currently don't have any saved scoreboards...\n        </Typography>\n      )}\n\n      <NewGame />\n    </Box>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  games: state.games,\n});\n\nexport default connect(mapStateToProps)(GamesList);\n","import React from \"react\";\nimport GamesList from \"./GamesList\";\n\nimport { Container } from \"@material-ui/core\";\n\nconst Main = () => {\n  return (\n    <Container>\n      <GamesList />\n    </Container>\n  );\n};\n\nexport default Main;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { loadGame, updateGames, toggleDialog } from \"../redux/actions\";\n\nimport {\n  Card,\n  CardContent,\n  CardActionArea,\n  CardActions,\n  Button,\n  Typography,\n  Divider,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemIcon,\n  Tooltip,\n} from \"@material-ui/core\";\n\nimport { CalendarToday, Update, People, EmojiEvents } from \"@material-ui/icons\";\n\nimport moment from \"moment\";\n\nconst GamesListEntry = (props) => {\n  const getLeader = () => {\n    let leaders = [props.gameData.players[0]];\n\n    for (let i = 1; i < props.gameData.players.length; i++) {\n      if (props.gameData.players[i].score > leaders[0].score) {\n        leaders = [props.gameData.players[i]];\n      } else if (props.gameData.players[i].score === leaders[0].score) {\n        leaders = leaders.concat([props.gameData.players[i]]);\n      } else {\n        continue;\n      }\n    }\n\n    switch (leaders.length) {\n      case 1:\n        return props.gameData.in_progress\n          ? `${leaders[0].name} is winning`\n          : `${leaders[0].name} won`;\n      case props.gameData.players.length:\n        return props.gameData.in_progress ? `Nobody is winning` : `Nobody won`;\n      case 2:\n        return props.gameData.in_progress\n          ? `${leaders[0].name} and ${leaders[1].name} are winning`\n          : `${leaders[0].name} and ${leaders[1].name} won`;\n      case 3:\n        return props.gameData.in_progress\n          ? `${leaders[0].name}, ${leaders[1].name} and ${leaders[2].name} are winning`\n          : `${leaders[0].name}, ${leaders[1].name} and ${leaders[2].name} won`;\n      default:\n        return props.gameData.in_progress\n          ? `The lead is tied ${leaders.length} ways`\n          : `The game was tied ${leaders.length} ways`;\n    }\n  };\n\n  const handleClick = (e) => {\n    let newGamesArr;\n    switch (e.currentTarget.id) {\n      case \"action-area\":\n      case \"open\":\n        props.dispatch(loadGame(props.gameData));\n        return props.dispatch(toggleDialog(\"viewerDialog\"));\n      case \"delete\":\n        newGamesArr = props.games.filter((i) => {\n          return i.id === props.gameData.id ? null : i;\n        });\n        return props.dispatch(updateGames(newGamesArr));\n      case \"toggle-lock\":\n        newGamesArr = props.games.map((i) => {\n          if (i.id === props.gameData.id) {\n            return {\n              ...i,\n              in_progress: !i.in_progress,\n              date_modified: new Date(),\n            };\n          }\n          return i;\n        });\n        return props.dispatch(updateGames(newGamesArr));\n      default:\n        return `Something else was clicked`;\n    }\n  };\n\n  return (\n    <Card raised>\n      <CardActionArea onClick={handleClick} id=\"action-area\">\n        <CardContent>\n          <Typography variant=\"h5\" align=\"center\">\n            {props.gameData.title}\n          </Typography>\n          <Typography\n            variant=\"subtitle2\"\n            align=\"center\"\n            color=\"textSecondary\"\n            gutterBottom\n          >\n            {props.gameData.description}\n          </Typography>\n          <List>\n            <Divider />\n            <ListItem>\n              <Tooltip title=\"Date created\" placement=\"left\">\n                <ListItemIcon edge=\"start\">\n                  <CalendarToday />\n                </ListItemIcon>\n              </Tooltip>\n              <ListItemText>\n                {`Created on `}\n                {moment().diff(moment(props.gameData.date_created), \"days\") <\n                365\n                  ? moment(props.gameData.date_created).format(\"Do MMMM\")\n                  : moment(props.gameData.date_created).format(\"Do MMMM YYYY\")}\n              </ListItemText>\n            </ListItem>\n            <Divider />\n            <ListItem>\n              <Tooltip title=\"Last update\" placement=\"left\">\n                <ListItemIcon edge=\"start\">\n                  <Update />\n                </ListItemIcon>\n              </Tooltip>\n              <ListItemText>\n                {`Updated `}\n                {moment(props.gameData.date_modified).fromNow()}\n              </ListItemText>\n            </ListItem>\n            <Divider />\n            <ListItem>\n              <Tooltip title=\"Number of players\" placement=\"left\">\n                <ListItemIcon edge=\"start\">\n                  <People />\n                </ListItemIcon>\n              </Tooltip>\n              <ListItemText>\n                {props.gameData.players.length}\n                {props.gameData.players.length > 1 ? ` players` : ` player`}\n              </ListItemText>\n            </ListItem>\n            <Divider />\n            <ListItem>\n              <Tooltip\n                title={props.gameData.in_progress ? `Current leader` : `Winner`}\n                placement=\"left\"\n              >\n                <ListItemIcon edge=\"start\">\n                  <EmojiEvents />\n                </ListItemIcon>\n              </Tooltip>\n              <ListItemText>{getLeader()}</ListItemText>\n            </ListItem>\n            <Divider />\n          </List>\n        </CardContent>\n      </CardActionArea>\n      <CardActions>\n        <Button\n          id=\"open\"\n          variant=\"outlined\"\n          color=\"primary\"\n          onClick={handleClick}\n        >\n          Open\n        </Button>\n        <Button\n          id=\"delete\"\n          variant=\"outlined\"\n          color=\"secondary\"\n          onClick={handleClick}\n        >\n          Delete\n        </Button>\n        <span style={{ flex: 1 }} />\n        <Tooltip\n          title={props.gameData.in_progress ? `Finish game` : `Resume game`}\n          placement=\"left\"\n          arrow\n        >\n          <Button\n            id=\"toggle-lock\"\n            variant={props.gameData.in_progress ? \"outlined\" : \"contained\"}\n            onClick={handleClick}\n          >\n            {props.gameData.in_progress ? `In progress` : `Finished`}\n          </Button>\n        </Tooltip>\n      </CardActions>\n    </Card>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  games: state.games,\n});\nexport default connect(mapStateToProps)(GamesListEntry);\n","import uniqId from \"uniqid\";\n\nexport default {\n  id: uniqId(),\n  title: \"\",\n  description: \"\",\n  players: 2,\n  showErr: false,\n  err: \"\",\n};\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { toggleDialog, updateGames } from \"../redux/actions\";\n\nimport { GameSummary, Scoreboard, EditPlayer, AddPlayer } from \"../Components\";\n\nimport {\n  Button,\n  Dialog,\n  AppBar,\n  Toolbar,\n  Typography,\n  Box,\n  TextField,\n  Container,\n  Grid,\n} from \"@material-ui/core\";\n\nimport { Alert } from \"@material-ui/lab\";\n\nimport { Lock, LockOpen } from \"@material-ui/icons\";\n\nimport newGameState from \"./newGameState\";\n\nconst ScoreboardViewer = (props) => {\n  const [compState, setCompState] = useState(newGameState);\n\n  useEffect(() => {\n    setCompState(props.gameLoaded);\n  }, [props.gameLoaded]);\n\n  useEffect(() => {\n    if (props.games.length > 0) {\n      setCompState(\n        props.games.reduce((acc, cv) => {\n          if (cv.id === props.gameLoaded.id) {\n            return cv;\n          } else {\n            return acc;\n          }\n        })\n      );\n    }\n    // eslint-disable-next-line\n  }, [props.games]);\n\n  const saveChanges = () => {\n    if (\n      props.gameLoaded.title !== compState.title ||\n      props.gameLoaded.description !== compState.description\n    ) {\n      const newGameArr = props.games.map((i) => {\n        if (i.id === props.gameLoaded.id) {\n          return {\n            ...i,\n            title: compState.title,\n            description: compState.description,\n            date_modified: new Date(),\n          };\n        } else {\n          return i;\n        }\n      });\n      props.dispatch(updateGames(newGameArr));\n    }\n  };\n  const handleChange = (e) => {\n    const f = e.currentTarget;\n    switch (f.id) {\n      case \"title\":\n        if (f.value.length < 30) {\n          setCompState({\n            ...compState,\n            title: f.value,\n          });\n        }\n        return;\n\n      case \"description\":\n        if (f.value.length < 60) {\n          setCompState({\n            ...compState,\n            description: f.value,\n          });\n        }\n        return;\n\n      default:\n        return compState;\n    }\n  };\n\n  const handleBlur = () => {\n    saveChanges();\n  };\n\n  const handleClick = (e) => {\n    switch (e.currentTarget.id) {\n      case \"back\":\n        saveChanges();\n        return props.dispatch(toggleDialog(\"viewerDialog\"));\n      case \"add-player\":\n        return props.dispatch(toggleDialog(\"addPlayerDialog\"));\n      case \"resume-game\":\n      case \"finish-game\":\n        const newGameArr = props.games.map((i) => {\n          if (i.id === props.gameLoaded.id) {\n            return {\n              ...i,\n              in_progress: !i.in_progress,\n              date_modified: new Date(),\n            };\n          }\n          return i;\n        });\n        return props.dispatch(updateGames(newGameArr));\n      default:\n        return;\n    }\n  };\n\n  return (\n    <Dialog fullScreen open={props.isOpen}>\n      <AppBar>\n        <Toolbar>\n          <Typography style={{ flex: 1 }}>Scoreboard</Typography>\n          <Button color=\"inherit\" edge=\"end\" onClick={handleClick} id=\"back\">\n            Back\n          </Button>\n        </Toolbar>\n      </AppBar>\n      <Toolbar />\n      <EditPlayer />\n      <AddPlayer />\n      <Box mt={3}>\n        <Container>\n          <Grid container spacing={2}>\n            <Grid item xs={12} md={5}>\n              <Box>\n                <TextField\n                  fullWidth\n                  multiline\n                  InputProps={{\n                    style: { fontSize: \"3rem\" },\n                    disableUnderline: true,\n                  }}\n                  placeholder=\"Title\"\n                  value={compState.title}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  id=\"title\"\n                />\n              </Box>\n              <Box mt={1}>\n                <TextField\n                  fullWidth\n                  value={compState.description}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  id=\"description\"\n                  multiline\n                  InputProps={{ disableUnderline: true }}\n                  placeholder=\"Description\"\n                />\n              </Box>\n              <Alert\n                variant=\"filled\"\n                icon={compState.in_progress ? <LockOpen /> : <Lock />}\n                color={compState.in_progress ? \"success\" : \"error\"}\n              >\n                {compState.in_progress\n                  ? `This game is in progress`\n                  : `This game has finished`}\n              </Alert>\n              <GameSummary gameData={compState} />\n              <Box\n                align=\"center\"\n                display=\"flex\"\n                justifyContent=\"space-between\"\n                mt={2}\n              >\n                <Button color=\"primary\" onClick={handleClick} id=\"add-player\">\n                  Add new player\n                </Button>\n\n                {compState.in_progress ? (\n                  <Button\n                    color=\"secondary\"\n                    onClick={handleClick}\n                    id=\"finish-game\"\n                  >\n                    Finish Game\n                  </Button>\n                ) : (\n                  <Button\n                    color=\"secondary\"\n                    onClick={handleClick}\n                    id=\"resume-game\"\n                  >\n                    Resume Game\n                  </Button>\n                )}\n              </Box>\n            </Grid>\n            <Grid item xs={12} md={7}>\n              <Scoreboard gameData={compState} />\n            </Grid>\n          </Grid>\n        </Container>\n      </Box>\n    </Dialog>\n  );\n};\nconst mapStateToProps = (state) => ({\n  isOpen: state.viewerDialog,\n  gameLoaded: state.gameLoadedInViewer,\n  games: state.games,\n});\nexport default connect(mapStateToProps)(ScoreboardViewer);\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { toggleDialog, updateGames } from \"../redux/actions\";\nimport {\n  Dialog,\n  DialogActions,\n  DialogTitle,\n  DialogContent,\n  TextField,\n  Button,\n  Grid,\n} from \"@material-ui/core\";\n\nconst EditPlayer = (props) => {\n  const [compState, setCompState] = useState({\n    name: \"\",\n    score: \"0\",\n  });\n\n  useEffect(() => {\n    const game = props.games.reduce((acc, cv) => {\n      return cv.id === props.playerLoaded.gameId ? cv : acc;\n    });\n    const player = game.players.reduce((acc, cv) => {\n      return cv.id === props.playerLoaded.playerId ? cv : acc;\n    });\n    setCompState({\n      ...compState,\n      name: player.name,\n      score: player.score,\n    });\n    // eslint-disable-next-line\n  }, [props.playerLoaded]);\n\n  const handleChange = (e) => {\n    const f = e.currentTarget;\n    switch (f.id) {\n      case \"name\":\n        return setCompState({\n          ...compState,\n          name: f.value,\n        });\n      case \"score\":\n        return setCompState({\n          ...compState,\n          score: f.value,\n        });\n      default:\n        return;\n    }\n  };\n\n  const handleBlur = (e) => {\n    const f = e.currentTarget;\n    switch (f.id) {\n      case \"score\":\n        if (!compState.score.toString().match(/^[1-9][0-9]*$/g)) {\n          setCompState({ ...compState, score: \"0\" });\n        }\n        return;\n      case \"name\":\n        if (compState.name === \"\") {\n          setCompState({ ...compState, name: \"New player\" });\n        }\n        return;\n      default:\n        return;\n    }\n  };\n\n  const handleClick = (e) => {\n    const f = e.currentTarget;\n    let newGamesArr;\n    switch (f.id) {\n      case \"cancel\":\n        return props.dispatch(toggleDialog(\"editPlayerDialog\"));\n      case \"delete\":\n        newGamesArr = props.games.map((i) => {\n          if (i.id === props.playerLoaded.gameId) {\n            return {\n              ...i,\n              players: i.players.filter((player) => {\n                return player.id === props.playerLoaded.playerId\n                  ? null\n                  : player;\n              }),\n              date_modified: new Date(),\n            };\n          } else {\n            return i;\n          }\n        });\n        props.dispatch(updateGames(newGamesArr));\n        return props.dispatch(toggleDialog(\"editPlayerDialog\"));\n      case \"update\":\n        newGamesArr = props.games.map((i) => {\n          if (i.id === props.playerLoaded.gameId) {\n            return {\n              ...i,\n              players: i.players\n                .map((player) => {\n                  if (player.id === props.playerLoaded.playerId) {\n                    return {\n                      ...player,\n                      name: compState.name,\n                      score: parseInt(compState.score),\n                    };\n                  } else {\n                    return player;\n                  }\n                })\n                .sort((a, b) => {\n                  return a.score < b.score ? 1 : -1;\n                }),\n              date_modified: new Date(),\n            };\n          } else {\n            return i;\n          }\n        });\n        props.dispatch(updateGames(newGamesArr));\n        return props.dispatch(toggleDialog(\"editPlayerDialog\"));\n      default:\n        return;\n    }\n  };\n\n  return (\n    <Dialog\n      open={props.isOpen}\n      onClose={() => props.dispatch(toggleDialog(\"editPlayerDialog\"))}\n      maxWidth=\"sm\"\n    >\n      <DialogTitle>Edit Player</DialogTitle>\n      <DialogContent>\n        <Grid container spacing={2}>\n          <Grid item xs={12} sm={10}>\n            <TextField\n              id=\"name\"\n              label=\"Name\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              autoFocus\n              fullWidth\n              value={compState.name}\n            />\n          </Grid>\n          <Grid item xs={12} sm={2}>\n            <TextField\n              id=\"score\"\n              label=\"Score\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              fullWidth\n              value={compState.score}\n            />\n          </Grid>\n        </Grid>\n      </DialogContent>\n      <DialogActions>\n        <Button color=\"inherit\" onClick={handleClick} id=\"cancel\">\n          Cancel\n        </Button>\n        <Button color=\"secondary\" onClick={handleClick} id=\"delete\">\n          Delete\n        </Button>\n        <Button color=\"primary\" onClick={handleClick} id=\"update\">\n          Update\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isOpen: state.editPlayerDialog,\n  playerLoaded: state.playerLoadedInEdit,\n  games: state.games,\n});\nexport default connect(mapStateToProps)(EditPlayer);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { toggleDialog, updateGames } from \"../redux/actions\";\nimport {\n  Dialog,\n  DialogActions,\n  DialogTitle,\n  DialogContent,\n  TextField,\n  Button,\n  Grid,\n} from \"@material-ui/core\";\n\nimport uniqId from \"uniqid\";\n\nconst AddPlayer = (props) => {\n  const [compState, setCompState] = useState({\n    name: \"New Player\",\n    score: \"0\",\n  });\n\n  const handleChange = (e) => {\n    const f = e.currentTarget;\n    switch (f.id) {\n      case \"name\":\n        return setCompState({\n          ...compState,\n          name: f.value,\n        });\n      case \"score\":\n        return setCompState({\n          ...compState,\n          score: f.value,\n        });\n      default:\n        return;\n    }\n  };\n\n  const handleBlur = (e) => {\n    const f = e.currentTarget;\n    switch (f.id) {\n      case \"score\":\n        if (!compState.score.match(/^[1-9][0-9]?$/g)) {\n          setCompState({ ...compState, score: \"0\" });\n        }\n        return;\n      case \"name\":\n        if (compState.name === \"\") {\n          setCompState({ ...compState, name: \"New player\" });\n        }\n        return;\n      default:\n        return;\n    }\n  };\n\n  const handleClick = (e) => {\n    switch (e.currentTarget.id) {\n      case \"cancel\":\n        return props.dispatch(toggleDialog(\"addPlayerDialog\"));\n      case \"add\":\n        const newPlayer = {\n          id: uniqId(),\n          name: compState.name,\n          score: parseInt(compState.score),\n        };\n\n        let newGamesArr = props.games.map((i) => {\n          if (props.gameLoaded.id === i.id) {\n            let newPlayersArr = i.players\n              .concat([newPlayer])\n              .slice()\n              .sort((a, b) => {\n                return a.score < b.score ? 1 : -1;\n              });\n            return {\n              ...i,\n              players: newPlayersArr,\n              date_modified: new Date(),\n            };\n          }\n          return i;\n        });\n        props.dispatch(updateGames(newGamesArr));\n        return props.dispatch(toggleDialog(\"addPlayerDialog\"));\n      default:\n        return;\n    }\n  };\n\n  return (\n    <Dialog\n      open={props.isOpen}\n      onClose={() => props.dispatch(toggleDialog(\"addPlayerDialog\"))}\n      maxWidth=\"sm\"\n    >\n      <DialogTitle>Add New Player</DialogTitle>\n      <DialogContent>\n        <Grid container spacing={2}>\n          <Grid item xs={12} sm={10}>\n            <TextField\n              id=\"name\"\n              label=\"Name\"\n              value={compState.name}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              autoFocus\n              fullWidth\n            />\n          </Grid>\n          <Grid item xs={12} sm={2}>\n            <TextField\n              id=\"score\"\n              label=\"Score\"\n              value={compState.score}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              fullWidth\n              style={{ WebkitAppearance: \"none\" }}\n            />\n          </Grid>\n        </Grid>\n      </DialogContent>\n      <DialogActions>\n        <Button color=\"inherit\" onClick={handleClick} id=\"cancel\">\n          Cancel\n        </Button>\n        <Button color=\"primary\" onClick={handleClick} id=\"add\">\n          Add\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\nconst mapStateToProps = (state) => ({\n  isOpen: state.addPlayerDialog,\n  games: state.games,\n  gameLoaded: state.gameLoadedInViewer,\n});\nexport default connect(mapStateToProps)(AddPlayer);\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { toggleDialog, updateGames } from \"../redux/actions\";\nimport {\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  TextField,\n  IconButton,\n  InputAdornment,\n  Fade,\n} from \"@material-ui/core\";\n\nimport { Alert } from \"@material-ui/lab\";\n\nimport newGameState from \"./newGameState\";\n\nimport uniqId from \"uniqid\";\n\nimport { AddCircle, RemoveCircle } from \"@material-ui/icons\";\n\nconst NewGame = (props) => {\n  const [compState, setCompState] = useState(newGameState);\n\n  useEffect(() => {\n    if (props.newGameDialog) {\n      setCompState(newGameState);\n    }\n  }, [props.newGameDialog]);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setCompState({\n        ...compState,\n        showErr: false,\n        err: \"\",\n      });\n    }, 4000);\n    // eslint-disable-next-line\n  }, [compState.showErr]);\n\n  const handleChange = (e) => {\n    const f = e.currentTarget;\n    switch (f.id) {\n      case \"title\":\n        if (f.value.length < 30)\n          return setCompState({\n            ...compState,\n            title: f.value,\n          });\n        return;\n\n      case \"description\":\n        if (f.value.length < 60) {\n          return setCompState({\n            ...compState,\n            description: f.value,\n          });\n        }\n        return;\n\n      case \"players\":\n        if (f.value.match(/^[1-9]?\\d?$/g)) {\n          return setCompState({\n            ...compState,\n            players: f.value,\n          });\n        }\n        return;\n      default:\n        return compState;\n    }\n  };\n\n  const handleBlur = (e) => {\n    if (!e.currentTarget.value.match(/^[1-9]\\d?$/g)) {\n      return setCompState({\n        ...compState,\n        players: 2,\n      });\n    }\n    return;\n  };\n\n  const handleClick = (e) => {\n    switch (e.currentTarget.id) {\n      case \"incPlayers\":\n        if (compState.players < 98) {\n          return setCompState({\n            ...compState,\n            players: parseInt(compState.players) + 1,\n          });\n        }\n        return;\n      case \"decPlayers\":\n        if (compState.players > 2) {\n          return setCompState({\n            ...compState,\n            players: parseInt(compState.players) - 1,\n          });\n        }\n        return;\n      case \"cancel\":\n        return props.dispatch(toggleDialog(\"newGameDialog\"));\n      case \"create\":\n        if (compState.title.length === 0) {\n          return setCompState({\n            ...compState,\n            showErr: true,\n            err: \"Please supply a title\",\n          });\n        }\n        if (compState.description.length === 0) {\n          return setCompState({\n            ...compState,\n            showErr: true,\n            err: \"Please supply a description\",\n          });\n        }\n\n        const generatePlayers = (noOfPlayers) => {\n          const arr = [];\n          for (let i = 0; i < noOfPlayers; i++) {\n            arr.push({\n              id: uniqId(),\n              name: `Player ${i + 1}`,\n              score: 0,\n            });\n          }\n          return arr;\n        };\n\n        const newGame = {\n          id: compState.id,\n          title: compState.title,\n          description: compState.description,\n          players: generatePlayers(compState.players),\n          date_created: new Date(),\n          date_modified: new Date(),\n          in_progress: true,\n        };\n\n        const newGamesArr = props.games.concat([newGame]);\n        props.dispatch(updateGames(newGamesArr));\n        return props.dispatch(toggleDialog(\"newGameDialog\"));\n      default:\n        return;\n    }\n  };\n\n  return (\n    <Dialog\n      maxWidth=\"sm\"\n      open={props.newGameDialog}\n      onClose={() => props.dispatch(toggleDialog(\"newGameDialog\"))}\n    >\n      <DialogTitle>Create New Scoreboard</DialogTitle>\n      <DialogContent>\n        {compState.showErr ? (\n          <Fade in>\n            <Alert severity=\"error\">{compState.err}</Alert>\n          </Fade>\n        ) : null}\n        <TextField\n          label=\"Title\"\n          id=\"title\"\n          fullWidth\n          margin=\"dense\"\n          onChange={handleChange}\n          value={compState.title}\n        />\n        <TextField\n          label=\"Description\"\n          id=\"description\"\n          fullWidth\n          margin=\"normal\"\n          onChange={handleChange}\n          value={compState.description}\n        />\n        <TextField\n          label=\"No. of players\"\n          id=\"players\"\n          value={compState.players}\n          onChange={handleChange}\n          onBlur={handleBlur}\n          style={{ width: \"9rem\" }}\n          margin=\"normal\"\n          InputProps={{\n            disableUnderline: true,\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <IconButton id=\"decPlayers\" onClick={handleClick}>\n                  <RemoveCircle />\n                </IconButton>\n                <IconButton id=\"incPlayers\" onClick={handleClick}>\n                  <AddCircle />\n                </IconButton>\n              </InputAdornment>\n            ),\n          }}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button id=\"cancel\" onClick={handleClick}>\n          Cancel\n        </Button>\n        <Button id=\"create\" onClick={handleClick} color=\"primary\">\n          Create\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  games: state.games,\n  newGameDialog: state.newGameDialog,\n});\nexport default connect(mapStateToProps)(NewGame);\n","import React from \"react\";\n\nimport { ScoreboardPlayerEntry } from \"../Components\";\n\nimport {\n  TableContainer,\n  Table,\n  TableHead,\n  TableRow,\n  TableCell,\n  Box,\n  Icon,\n  Paper,\n  TableBody,\n} from \"@material-ui/core\";\n\nimport { RemoveCircle, AddCircle } from \"@material-ui/icons\";\n\nconst Scoreboard = (props) => {\n  const getPosition = (index) => {\n    if (index > 0) {\n      return props.gameData.players[index].score ===\n        props.gameData.players[index - 1].score\n        ? null\n        : index + 1;\n    } else {\n      return index + 1;\n    }\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell width=\"10%\">Pos.</TableCell>\n            <TableCell width=\"50%\">Name</TableCell>\n            <TableCell width=\"30%\" align=\"right\">\n              Score\n            </TableCell>\n            <TableCell width=\"5%\" align=\"center\" padding=\"none\">\n              <Box mt={1}>\n                <Icon>\n                  <RemoveCircle />\n                </Icon>\n              </Box>\n            </TableCell>\n            <TableCell width=\"5%\" align=\"center\" padding=\"none\">\n              <Box mt={1}>\n                <Icon>\n                  <AddCircle />\n                </Icon>\n              </Box>\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {typeof props.gameData.players === \"object\"\n            ? props.gameData.players.map((i, ind) => {\n                return (\n                  <ScoreboardPlayerEntry\n                    key={i.id}\n                    position={getPosition(ind)}\n                    name={i.name}\n                    score={i.score}\n                    id={i.id}\n                    inProgress={props.gameData.in_progress}\n                  />\n                );\n              })\n            : null}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default Scoreboard;\n","import React from \"react\";\nimport {\n  List,\n  Divider,\n  ListItem,\n  Tooltip,\n  ListItemIcon,\n  ListItemText,\n} from \"@material-ui/core\";\n\nimport { CalendarToday, Update, People, EmojiEvents } from \"@material-ui/icons\";\n\nimport moment from \"moment\";\nimport getLeader from \"./getLeader\";\n\nconst GameSummary = (props) => {\n  return (\n    <List>\n      <Divider />\n      <ListItem>\n        <Tooltip title=\"Date created\" placement=\"left\">\n          <ListItemIcon edge=\"start\">\n            <CalendarToday />\n          </ListItemIcon>\n        </Tooltip>\n        <ListItemText>\n          {`Created on `}\n          {moment().diff(moment(props.gameData.date_created), \"days\") < 365\n            ? moment(props.gameData.date_created).format(\"Do MMMM\")\n            : moment(props.gameData.date_created).format(\"Do MMMM YYYY\")}\n        </ListItemText>\n      </ListItem>\n      <Divider />\n      <ListItem>\n        <Tooltip title=\"Last update\" placement=\"left\">\n          <ListItemIcon edge=\"start\">\n            <Update />\n          </ListItemIcon>\n        </Tooltip>\n        <ListItemText>\n          {`Updated `}\n          {moment(props.gameData.date_modified).fromNow()}\n        </ListItemText>\n      </ListItem>\n      <Divider />\n      <ListItem>\n        <Tooltip title=\"Number of players\" placement=\"left\">\n          <ListItemIcon edge=\"start\">\n            <People />\n          </ListItemIcon>\n        </Tooltip>\n        <ListItemText>\n          {props.gameData.players.length}\n          {props.gameData.players.length > 1 ? ` players` : ` player`}\n        </ListItemText>\n      </ListItem>\n      <Divider />\n      <ListItem>\n        <Tooltip\n          title={props.gameData.in_progress ? `Current leader` : `Winner`}\n          placement=\"left\"\n        >\n          <ListItemIcon edge=\"start\">\n            <EmojiEvents />\n          </ListItemIcon>\n        </Tooltip>\n        <ListItemText>\n          {getLeader(props.gameData.players, props.gameData.in_progress)}\n        </ListItemText>\n      </ListItem>\n      <Divider />\n    </List>\n  );\n};\n\nexport default GameSummary;\n","export default (players, inProgress) => {\n  if (typeof players === \"object\") {\n    let leaders = [players[0]];\n\n    for (let i = 1; i < players.length; i++) {\n      if (players[i].score > leaders[0].score) {\n        leaders = [players[i]];\n      } else if (players[i].score === leaders[0].score) {\n        leaders = leaders.concat([players[i]]);\n      } else {\n        continue;\n      }\n    }\n\n    switch (leaders.length) {\n      case 1:\n        return inProgress\n          ? `${leaders[0].name} is winning`\n          : `${leaders[0].name} won`;\n      case players.length:\n        return inProgress ? `Nobody is winning` : `Nobody won`;\n      case 2:\n        return inProgress\n          ? `${leaders[0].name} and ${leaders[1].name} are winning`\n          : `${leaders[0].name} and ${leaders[1].name} won`;\n      case 3:\n        return inProgress\n          ? `${leaders[0].name}, ${leaders[1].name} and ${leaders[2].name} are winning`\n          : `${leaders[0].name}, ${leaders[1].name} and ${leaders[2].name} won`;\n      default:\n        return inProgress\n          ? `The lead is tied ${leaders.length} ways`\n          : `The game was tied ${leaders.length} ways`;\n    }\n  }\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { updateGames, toggleDialog, loadPlayer } from \"../redux/actions\";\nimport { TableRow, TableCell, IconButton } from \"@material-ui/core\";\n\nimport { RemoveCircle, AddCircle } from \"@material-ui/icons\";\n\nconst ScoreboardPlayerEntry = (props) => {\n  const handleClick = (e) => {\n    if (props.inProgress) {\n      const f = e.currentTarget;\n      let newGamesArray;\n      switch (f.id) {\n        case \"inc-score\":\n          newGamesArray = props.games.map((i) => {\n            if (i.id === props.gameLoaded.id) {\n              return {\n                ...i,\n                players: i.players\n                  .map((player) => {\n                    if (player.id === props.id) {\n                      return {\n                        ...player,\n                        score: player.score + 1,\n                      };\n                    } else {\n                      return player;\n                    }\n                  })\n                  .sort((a, b) => {\n                    return a.score < b.score ? 1 : -1;\n                  }),\n                date_modified: new Date(),\n              };\n            } else {\n              return i;\n            }\n          });\n          return props.dispatch(updateGames(newGamesArray));\n        case \"dec-score\":\n          newGamesArray = props.games.map((i) => {\n            if (i.id === props.gameLoaded.id) {\n              return {\n                ...i,\n                players: i.players\n                  .map((player) => {\n                    if (player.id === props.id) {\n                      return {\n                        ...player,\n                        score: player.score - 1,\n                      };\n                    } else {\n                      return player;\n                    }\n                  })\n                  .sort((a, b) => {\n                    return a.score < b.score ? 1 : -1;\n                  }),\n                date_modified: new Date(),\n              };\n            } else {\n              return i;\n            }\n          });\n          return props.dispatch(updateGames(newGamesArray));\n        default:\n          props.dispatch(loadPlayer(props.gameLoaded.id, props.id));\n          return props.dispatch(toggleDialog(\"editPlayerDialog\"));\n      }\n    }\n  };\n  return (\n    <TableRow hover key={props.id} id={props.id}>\n      <TableCell\n        tabIndex=\"0\"\n        onKeyUp={(e) => (e.key === \"Enter\" ? handleClick(e) : null)}\n        id={`pos_${props.id}`}\n        onClick={handleClick}\n      >\n        {props.position}\n      </TableCell>\n      <TableCell\n        tabIndex=\"0\"\n        onKeyUp={(e) => (e.key === \"Enter\" ? handleClick(e) : null)}\n        id={`nam_${props.id}`}\n        onClick={handleClick}\n      >\n        {props.name}\n      </TableCell>\n      <TableCell\n        tabIndex=\"0\"\n        onKeyUp={(e) => (e.key === \"Enter\" ? handleClick(e) : null)}\n        id={`sco_${props.id}`}\n        onClick={handleClick}\n        align=\"right\"\n      >\n        {props.score}\n      </TableCell>\n      <TableCell align=\"center\" padding=\"none\">\n        <IconButton onClick={handleClick} id=\"dec-score\">\n          <RemoveCircle />\n        </IconButton>\n      </TableCell>\n      <TableCell align=\"center\" padding=\"none\">\n        <IconButton onClick={handleClick} id=\"inc-score\">\n          <AddCircle />\n        </IconButton>\n      </TableCell>\n    </TableRow>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  gameLoaded: state.gameLoadedInViewer,\n  games: state.games,\n});\nexport default connect(mapStateToProps)(ScoreboardPlayerEntry);\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { getGames } from \"./redux/actions\";\nimport \"./App.css\";\n\nimport { Header, Main, Footer, ScoreboardViewer } from \"./Components\";\n\nfunction App(props) {\n  useEffect(() => {\n    const ls = localStorage.getItem(\"daves_scorecard_app\");\n    if (ls) {\n      props.dispatch(getGames(JSON.parse(ls)));\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"daves_scorecard_app\", JSON.stringify(props.games));\n  }, [props.games]);\n\n  return (\n    <>\n      <ScoreboardViewer />\n      <Header />\n      <Main />\n      <Footer />\n    </>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  games: state.games,\n});\n\nexport default connect(mapStateToProps)(App);\n","import {\n  TOGGLE_DIALOG,\n  CREATE_NEW_GAME,\n  UPDATE_GAME,\n  GET_GAMES,\n  LOAD_GAME,\n  LOAD_PLAYER,\n} from \"./types\";\n\nimport newGameState from \"../comps/newGameState\";\n\nconst initialState = {\n  games: [],\n  gameLoadedInViewer: newGameState,\n  playerLoadedInEdit: { gameId: \"\", playerId: \"\" },\n  viewerDialog: false,\n  newGameDialog: false,\n  addPlayerDialog: false,\n  editPlayerDialog: false,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case TOGGLE_DIALOG:\n      return {\n        ...state,\n        [action.payload]: !state[action.payload],\n      };\n    case GET_GAMES:\n    case CREATE_NEW_GAME:\n    case UPDATE_GAME:\n      return {\n        ...state,\n        games: action.payload,\n      };\n    case LOAD_GAME:\n      return {\n        ...state,\n        gameLoadedInViewer: action.payload,\n      };\n    case LOAD_PLAYER:\n      return {\n        ...state,\n        playerLoadedInEdit: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","import { createStore } from \"redux\";\nimport reducer from \"./reducer\";\n\nexport default createStore(reducer);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\n\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}